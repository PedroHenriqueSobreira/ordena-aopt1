#include <stdio.h>
#include <stdbool.h>

void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void bubbleSort1(int arr[], int n) {
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                swap(&arr[j], &arr[j+1]);
            }
        }
    }
}

void bubbleSort2(int arr[], int n) {
    for (int i = 0; i < n-1; i++) {
        bool swapped = false;
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                swap(&arr[j], &arr[j+1]);
                swapped = true;
            }
        }
        if (!swapped) {
            break;
        }
    }
}

void bubbleSort3(int arr[], int n) {
    int newn;
    do {
        newn = 0;
        for (int i = 0; i < n-1; i++) {
            if (arr[i] > arr[i+1]) {
                swap(&arr[i], &arr[i+1]);
                newn = i + 1;
            }
        }
        n = newn;
    } while (newn > 0);
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int L1[] = {92, 80, 71, 63, 55, 41, 39, 27, 14};
    int L2[] = {92, 80, 71, 63, 55, 41, 39, 27, 14};
    int L3[] = {92, 80, 71, 63, 55, 41, 39, 27, 14};
    int n = sizeof(L1) / sizeof(L1[0]);

    printf("Original array:\n");
    printArray(L1, n);

    bubbleSort1(L1, n);
    printf("Sorted array with bubbleSort1:\n");
    printArray(L1, n);

    bubbleSort2(L2, n);
    printf("Sorted array with bubbleSort2:\n");
    printArray(L2, n);

    bubbleSort3(L3, n);
    printf("Sorted array with bubbleSort3:\n");
    printArray(L3, n);

    return 0;
}
